name: Set Type Field Based on Label

on:
  issues:
    types: [labeled]

jobs:
  set-project-type:
    if: |
      contains(fromJson('["bug","feature","task"]'), github.event.label.name)
    runs-on: ubuntu-latest

    steps:
      - name: Set custom field value in GitHub Project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
          LABEL: ${{ github.event.label.name }}
        run: |
          ORG=your-org-name                # <--- replace with your org or user name
          PROJECT_NUMBER=1                # <--- replace with your Project number (not ID)
          FIELD_NAME="Type"

          # Match label to field value
          if [ "$LABEL" = "bug" ]; then
            FIELD_VALUE="Bug"
          elif [ "$LABEL" = "feature" ]; then
            FIELD_VALUE="Feature"
          elif [ "$LABEL" = "task" ]; then
            FIELD_VALUE="Task"
          else
            echo "Label $LABEL does not map to a known Type field value. Exiting."
            exit 0
          fi

          echo "Setting Type = $FIELD_VALUE for issue with label $LABEL"

          # Step 1: Get Project ID
          PROJECT_ID=$(gh api graphql -f query='
          query {
            organization(login: "'$ORG'") {
              projectV2(number: '$PROJECT_NUMBER') {
                id
              }
            }
          }' --jq '.data.organization.projectV2.id')

          # Step 2: Get Field ID and Option ID
          read FIELD_ID OPTION_ID <<< $(gh api graphql -f query='
          query {
            organization(login: "'$ORG'") {
              projectV2(number: '$PROJECT_NUMBER') {
                fields(first: 100) {
                  nodes {
                    ... on ProjectV2SingleSelectField {
                      id
                      name
                      options {
                        id
                        name
                      }
                    }
                  }
                }
              }
            }
          }' --jq '
          .data.organization.projectV2.fields.nodes[]
          | select(.name=="'$FIELD_NAME'")
          | [.id, (.options[] | select(.name=="'$FIELD_VALUE'") | .id)] | @tsv')

          # Step 3: Find the Issue's Project Item ID
          ITEM_ID=$(gh api graphql -f query='
          query {
            organization(login: "'$ORG'") {
              projectV2(number: '$PROJECT_NUMBER') {
                items(first: 100, orderBy: {field: CREATED_AT, direction: DESC}) {
                  nodes {
                    id
                    content {
                      ... on Issue {
                        id
                      }
                    }
                  }
                }
              }
            }
          }' --jq '
          .data.organization.projectV2.items.nodes[]
          | select(.content.id=="'$ISSUE_ID'")
          | .id')

          # Step 4: Update the project field
          gh api graphql -f query='
          mutation {
            updateProjectV2ItemFieldValue(input: {
              projectId: "'$PROJECT_ID'",
              itemId: "'$ITEM_ID'",
              fieldId: "'$FIELD_ID'",
              value: { singleSelectOptionId: "'$OPTION_ID'" }
            }) {
              projectV2Item {
                id
              }
            }
          }'


